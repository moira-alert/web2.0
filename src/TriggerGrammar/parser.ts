// This file was generated by lezer-generator. You probably shouldn't edit it.
// @ts-nocheck
import { LRParser } from "@lezer/lr";
export const parser = LRParser.deserialize({
    version: 14,
    states:
        "#rOVQPOOObQPO'#CaO!PQPO'#C`OOQO'#Ch'#ChQVQPOOO!UQPO'#CjO!ZQPO,59POOQO,59R,59RO!rQPO'#CdOOQO,58z,58zOOQO-E6f-E6fOOQO,59U,59UOOQO-E6h-E6hOOQO,59O,59OO#QQPO,59OO#VQPO'#CoOOQO1G.j1G.jO#hQPO,59ZOVQPO'#CiOOQO-E6g-E6gO#pQPO,59T",
    stateData:
        "$R~OaOS~OQRORRObPO~OYVOeTOQXXRXXVTX_XXbXXUXXdXX~OVWO~ObZO~OeTOQXaRXa_XabXaUXadXa~OQRORROU]ObPO~OU`O~OQRORRObPOdbOUcX~OdbOUca~OQRORRObPOU]ad]a~O",
    goto: "!gdPPPPemPPuePex!W!^PPPP!d]ROSW_bd]QOSW_bdRXQQSOUYS_dQ_WRdbQa_RcaQUPR[UR^W",
    nodeNames:
        "âš  BuiltExpression String Number FunctionCall FunctionName ) ( ArgumentList Value = Variable",
    maxTerm: 21,
    nodeProps: [
        ["openedBy", 6, "("],
        ["closedBy", 7, ")"],
    ],
    skippedNodes: [0],
    repeatNodeCount: 3,
    tokenData:
        "%a~RdX^!apq!ars#Uwx#sxy$]yz$b|}$g!O!P$l!Q![$q!_!`$y!c!}%O#T#o%O#y#z!a$f$g!a#BY#BZ!a$IS$I_!a$I|$JO!a$JT$JU!a$KV$KW!a&FU&FV!a~!fYa~X^!apq!a#y#z!a$f$g!a#BY#BZ!a$IS$I_!a$I|$JO!a$JT$JU!a$KV$KW!a&FU&FV!a~#XTOr#Urs#hs;'S#U;'S;=`#m<%lO#U~#mOQ~~#pP;=`<%l#U~#vTOw#swx#hx;'S#s;'S;=`$V<%lO#s~$YP;=`<%l#s~$bOV~~$gOU~~$lOd~~$qOe~~$vPR~!Q![$q~%OOY~~%TSb~!Q![%O!c!}%O#R#S%O#T#o%O",
    tokenizers: [0],
    topRules: { BuiltExpression: [0, 1] },
    tokenPrec: 0,
});
